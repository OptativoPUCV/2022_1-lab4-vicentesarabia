Sat Apr  9 23:35:10 HSP 2022: 
 hashmap.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)
test.c:8:8: error: '_strdup' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
 char * _strdup(const char * str) {
        ^~~~~~~
test.c: In function 'enlarge_test':
test.c:438:47: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             if(map->buckets[i]==NULL) sprintf(msg,"%.100s(null)  ",msg);
                                               ^~~                  ~~~
test.c:439:26: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             else sprintf(msg,"%.100s%s  ", msg, (char*)map->buckets[i]->value);
                          ^~~               ~~~
test.c:442:17: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
         sprintf(msg,"%.100s\nbut should be: \nvalue3  (null)  (null)  (null)  value4  (null)  value2  value1  value0  (null)  (null)  (null)  value5  (null)  (null)  (null)  (null)  (null)  (null)  (null)",msg);
                 ^~~                                                                                                                                                                                           ~~~
cc1.exe: all warnings being treated as errors
Compilation failed
08f2963
Sun Apr 10 14:46:50 HSP 2022: 
 hashmap.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
test.c:8:8: error: '_strdup' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
 char * _strdup(const char * str) {
        ^~~~~~~
test.c: In function 'enlarge_test':
test.c:438:47: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             if(map->buckets[i]==NULL) sprintf(msg,"%.100s(null)  ",msg);
                                               ^~~                  ~~~
test.c:439:26: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             else sprintf(msg,"%.100s%s  ", msg, (char*)map->buckets[i]->value);
                          ^~~               ~~~
test.c:442:17: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
         sprintf(msg,"%.100s\nbut should be: \nvalue3  (null)  (null)  (null)  value4  (null)  value2  value1  value0  (null)  (null)  (null)  value5  (null)  (null)  (null)  (null)  (null)  (null)  (null)",msg);
                 ^~~                                                                                                                                                                                           ~~~
cc1.exe: all warnings being treated as errors
Compilation failed
3fbe998
Sun Apr 10 14:54:05 HSP 2022: 
test.c:8:8: error: '_strdup' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
 char * _strdup(const char * str) {
        ^~~~~~~
test.c: In function 'enlarge_test':
test.c:438:47: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             if(map->buckets[i]==NULL) sprintf(msg,"%.100s(null)  ",msg);
                                               ^~~                  ~~~
test.c:439:26: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             else sprintf(msg,"%.100s%s  ", msg, (char*)map->buckets[i]->value);
                          ^~~               ~~~
test.c:442:17: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
         sprintf(msg,"%.100s\nbut should be: \nvalue3  (null)  (null)  (null)  value4  (null)  value2  value1  value0  (null)  (null)  (null)  value5  (null)  (null)  (null)  (null)  (null)  (null)  (null)",msg);
                 ^~~                                                                                                                                                                                           ~~~
cc1.exe: all warnings being treated as errors
Compilation failed
216de87
Sun Apr 10 15:07:31 HSP 2022: 
test.c:8:8: error: '_strdup' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
 char * _strdup(const char * str) {
        ^~~~~~~
test.c: In function 'enlarge_test':
test.c:438:47: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             if(map->buckets[i]==NULL) sprintf(msg,"%.100s(null)  ",msg);
                                               ^~~                  ~~~
test.c:439:26: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             else sprintf(msg,"%.100s%s  ", msg, (char*)map->buckets[i]->value);
                          ^~~               ~~~
test.c:442:17: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
         sprintf(msg,"%.100s\nbut should be: \nvalue3  (null)  (null)  (null)  value4  (null)  value2  value1  value0  (null)  (null)  (null)  value5  (null)  (null)  (null)  (null)  (null)  (null)  (null)",msg);
                 ^~~                                                                                                                                                                                           ~~~
cc1.exe: all warnings being treated as errors
Compilation failed
049e50c
Sun Apr 10 15:07:47 HSP 2022: 
test.c:8:8: error: '_strdup' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
 char * _strdup(const char * str) {
        ^~~~~~~
test.c: In function 'enlarge_test':
test.c:438:47: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             if(map->buckets[i]==NULL) sprintf(msg,"%.100s(null)  ",msg);
                                               ^~~                  ~~~
test.c:439:26: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             else sprintf(msg,"%.100s%s  ", msg, (char*)map->buckets[i]->value);
                          ^~~               ~~~
test.c:442:17: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
         sprintf(msg,"%.100s\nbut should be: \nvalue3  (null)  (null)  (null)  value4  (null)  value2  value1  value0  (null)  (null)  (null)  value5  (null)  (null)  (null)  (null)  (null)  (null)  (null)",msg);
                 ^~~                                                                                                                                                                                           ~~~
cc1.exe: all warnings being treated as errors
Compilation failed
4b819ba
Sun Apr 10 15:30:20 HSP 2022: 
test.c:8:8: error: '_strdup' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
 char * _strdup(const char * str) {
        ^~~~~~~
test.c: In function 'enlarge_test':
test.c:438:47: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             if(map->buckets[i]==NULL) sprintf(msg,"%.100s(null)  ",msg);
                                               ^~~                  ~~~
test.c:439:26: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             else sprintf(msg,"%.100s%s  ", msg, (char*)map->buckets[i]->value);
                          ^~~               ~~~
test.c:442:17: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
         sprintf(msg,"%.100s\nbut should be: \nvalue3  (null)  (null)  (null)  value4  (null)  value2  value1  value0  (null)  (null)  (null)  value5  (null)  (null)  (null)  (null)  (null)  (null)  (null)",msg);
                 ^~~                                                                                                                                                                                           ~~~
cc1.exe: all warnings being treated as errors
Compilation failed
60fa23d
Sun Apr 10 15:49:45 HSP 2022: 
test.c:8:8: error: '_strdup' redeclared without dllimport attribute: previous dllimport ignored [-Werror=attributes]
 char * _strdup(const char * str) {
        ^~~~~~~
test.c: In function 'enlarge_test':
test.c:438:47: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             if(map->buckets[i]==NULL) sprintf(msg,"%.100s(null)  ",msg);
                                               ^~~                  ~~~
test.c:439:26: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             else sprintf(msg,"%.100s%s  ", msg, (char*)map->buckets[i]->value);
                          ^~~               ~~~
test.c:442:17: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
         sprintf(msg,"%.100s\nbut should be: \nvalue3  (null)  (null)  (null)  value4  (null)  value2  value1  value0  (null)  (null)  (null)  value5  (null)  (null)  (null)  (null)  (null)  (null)  (null)",msg);
                 ^~~                                                                                                                                                                                           ~~~
cc1.exe: all warnings being treated as errors
Compilation failed
8a6f9fc
Sun Apr 10 15:52:52 HSP 2022: 
test.c: In function 'enlarge_test':
test.c:438:47: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             if(map->buckets[i]==NULL) sprintf(msg,"%.100s(null)  ",msg);
                                               ^~~                  ~~~
test.c:439:26: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
             else sprintf(msg,"%.100s%s  ", msg, (char*)map->buckets[i]->value);
                          ^~~               ~~~
test.c:442:17: error: passing argument 1 to restrict-qualified parameter aliases with argument 3 [-Werror=restrict]
         sprintf(msg,"%.100s\nbut should be: \nvalue3  (null)  (null)  (null)  value4  (null)  value2  value1  value0  (null)  (null)  (null)  value5  (null)  (null)  (null)  (null)  (null)  (null)  (null)",msg);
                 ^~~                                                                                                                                                                                           ~~~
cc1.exe: all warnings being treated as errors
Compilation failed
83ac00f
Sun Apr 10 21:07:36 UTC 2022: 
test.c: In function ‘initializeMap’:
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
         createPair(_strdup(words[i]),_strdup(msg));
                    ^~~~~~~
                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
In file included from test.c:4:0:
hashmap.c:19:8: note: expected ‘char *’ but argument is of type ‘int’
 Pair * createPair( char * key,  void * value) {
        ^~~~~~~~~~
test.c:53:38: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
         createPair(_strdup(words[i]),_strdup(msg));
                                      ^~~~~~~
In file included from test.c:4:0:
hashmap.c:19:8: note: expected ‘void *’ but argument is of type ‘int’
 Pair * createPair( char * key,  void * value) {
        ^~~~~~~~~~
test.c: In function ‘hash_test3’:
test.c:126:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
             ^~~~~~~
In file included from test.c:4:0:
hashmap.c:26:6: note: expected ‘char *’ but argument is of type ‘int’
 long hash( char * key, long capacity) {
      ^~~~
test.c:126:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
                                       ^~~~~~~
In file included from test.c:4:0:
hashmap.c:26:6: note: expected ‘char *’ but argument is of type ‘int’
 long hash( char * key, long capacity) {
      ^~~~
test.c:127:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
             ^~~~~~~
In file included from test.c:4:0:
hashmap.c:26:6: note: expected ‘char *’ but argument is of type ‘int’
 long hash( char * key, long capacity) {
      ^~~~
test.c:127:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
                                       ^~~~~~~
In file included from test.c:4:0:
hashmap.c:26:6: note: expected ‘char *’ but argument is of type ‘int’
 long hash( char * key, long capacity) {
      ^~~~
test.c:128:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
             ^~~~~~~
In file included from test.c:4:0:
hashmap.c:26:6: note: expected ‘char *’ but argument is of type ‘int’
 long hash( char * key, long capacity) {
      ^~~~
test.c:128:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
                                       ^~~~~~~
In file included from test.c:4:0:
hashmap.c:26:6: note: expected ‘char *’ but argument is of type ‘int’
 long hash( char * key, long capacity) {
      ^~~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup(":key"),_strdup("value"));
                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘char *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup(":key"),_strdup("value"));
                                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘void *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("case"),_strdup("repetido"));
                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘char *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("case"),_strdup("repetido"));
                                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘void *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("key"),_strdup("value"));
                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘char *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("key"),_strdup("value"));
                                   ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘void *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("key"),_strdup("value"));
                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘char *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("key"),_strdup("value"));
                                   ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘void *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("holi"),_strdup("value"));
                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘char *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("holi"),_strdup("value"));
                                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘void *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("key"),_strdup("value"));
                    ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘char *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
     insertMap(map, _strdup("key"),_strdup("value"));
                                   ^~~~~~~
In file included from test.c:4:0:
hashmap.c:42:6: note: expected ‘void *’ but argument is of type ‘int’
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
                                ^~~~~~~
In file included from test.c:4:0:
hashmap.c:19:8: note: expected ‘char *’ but argument is of type ‘int’
 Pair * createPair( char * key,  void * value) {
        ^~~~~~~~~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
                                               ^~~~~~~
In file included from test.c:4:0:
hashmap.c:19:8: note: expected ‘void *’ but argument is of type ‘int’
 Pair * createPair( char * key,  void * value) {
        ^~~~~~~~~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
                                ^~~~~~~
In file included from test.c:4:0:
hashmap.c:19:8: note: expected ‘char *’ but argument is of type ‘int’
 Pair * createPair( char * key,  void * value) {
        ^~~~~~~~~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
                                               ^~~~~~~
In file included from test.c:4:0:
hashmap.c:19:8: note: expected ‘void *’ but argument is of type ‘int’
 Pair * createPair( char * key,  void * value) {
        ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
9a03f64
Sun Apr 10 21:36:26 UTC 2022: 
 tests:  0|6
total_score: 0/70
a7fc632
Sun Apr 10 21:40:35 UTC 2022: 
 hashmap.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)
In file included from test.c:4:0:
hashmap.c: In function ‘createMap’:
hashmap.c:63:5: error: expected ‘;’ before ‘mapa’
     mapa->buckets=(Pair**)calloc(mapa->capacity,sizeof(Pair*));
     ^~~~
Compilation failed
160bd1a
Sun Apr 10 21:40:43 UTC 2022: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|6
total_score: 0/70
bfdcfa7
Sun Apr 10 21:50:07 UTC 2022: 
 hashmap.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
 tests:  1|5
total_score: 10/70
ba0f55f
Sun Apr 10 22:20:41 UTC 2022: 
 hashmap.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)
In file included from test.c:4:0:
hashmap.c: In function ‘insertMap’:
hashmap.c:46:3: error: expected ‘,’ or ‘;’ before ‘while’
   while(map->buckets[index].key != NULL)
   ^~~~~
Compilation failed
44a0dbe
Sun Apr 10 22:20:54 UTC 2022: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
hashmap.c: In function ‘insertMap’:
hashmap.c:46:28: error: ‘*(map->buckets + (sizetype)(index * 8))’ is a pointer; did you mean to use ‘->’?
   while(map->buckets[index].key != NULL)
                            ^
                            ->
hashmap.c:48:42: error: ‘*(map->buckets + (sizetype)(index * 8))’ is a pointer; did you mean to use ‘->’?
       if(is_equal(key,map->buckets[index].key )==0){
                                          ^
                                          ->
hashmap.c:49:35: error: ‘*(map->buckets + (sizetype)(index * 8))’ is a pointer; did you mean to use ‘->’?
         return map->buckets[index].key;
                                   ^
                                   ->
hashmap.c:49:16: error: ‘return’ with a value, in function returning void [-Werror]
         return map->buckets[index].key;
                ^~~
hashmap.c:42:6: note: declared here
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
1e5ed37
Sun Apr 10 22:21:10 UTC 2022: 
 hashmap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:0:
hashmap.c: In function ‘insertMap’:
hashmap.c:48:42: error: ‘*(map->buckets + (sizetype)(index * 8))’ is a pointer; did you mean to use ‘->’?
       if(is_equal(key,map->buckets[index].key )==0){
                                          ^
                                          ->
hashmap.c:49:35: error: ‘return’ with a value, in function returning void [-Werror]
         return map->buckets[index]->key;
                ~~~~~~~~~~~~~~~~~~~^~~~~
hashmap.c:42:6: note: declared here
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
c6a597a
Sun Apr 10 22:21:20 UTC 2022: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
hashmap.c: In function ‘insertMap’:
hashmap.c:49:35: error: ‘return’ with a value, in function returning void [-Werror]
         return map->buckets[index]->key;
                ~~~~~~~~~~~~~~~~~~~^~~~~
hashmap.c:42:6: note: declared here
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
49f8cdd
Sun Apr 10 22:21:49 UTC 2022: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
hashmap.c: In function ‘insertMap’:
hashmap.c:49:35: error: ‘*(map->buckets + (sizetype)(index * 8))’ is a pointer; did you mean to use ‘->’?
         return map->buckets[index].key;
                                   ^
                                   ->
hashmap.c:49:16: error: ‘return’ with a value, in function returning void [-Werror]
         return map->buckets[index].key;
                ^~~
hashmap.c:42:6: note: declared here
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
4643702
Sun Apr 10 22:22:04 UTC 2022: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
hashmap.c: In function ‘insertMap’:
hashmap.c:49:35: error: ‘return’ with a value, in function returning void [-Werror]
         return map->buckets[index]->key;
                ~~~~~~~~~~~~~~~~~~~^~~~~
hashmap.c:42:6: note: declared here
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
5c261a2
Sun Apr 10 22:25:06 UTC 2022: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:0:
hashmap.c: In function ‘insertMap’:
hashmap.c:49:35: error: ‘return’ with a value, in function returning void [-Werror]
         return map->buckets[index]->value;
                ~~~~~~~~~~~~~~~~~~~^~~~~~~
hashmap.c:42:6: note: declared here
 void insertMap(HashMap * map, char * key, void * value) {
      ^~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
7269c47
